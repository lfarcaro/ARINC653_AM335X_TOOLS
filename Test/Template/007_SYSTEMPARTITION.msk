MASK_START
SNIPPET_START CREATE_ERROR_HANDLER_ERROR_HANDLING_CODE
SNIPPET_END
SNIPPET_START CREATE_PARTITION_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START CREATE_PROCESS_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START GET_ERROR_STATUS_ERROR_HANDLING_CODE
			while (true) {
			}
SNIPPET_END
SNIPPET_START GLOBAL_INCLUDES
// Test include
#include "test.h"
SNIPPET_END
SNIPPET_START MODULE_DEFAULTPARTITION_INITIALIZATION
	// Starts up test
	TEST_STARTUP();
SNIPPET_END
SNIPPET_START MODULE_DEFAULTPARTITION_VARIABLES
SNIPPET_END
SNIPPET_START MODULE_DESCRIPTION
SNIPPET_END
SNIPPET_START MODULE_FUNCTIONS
SNIPPET_END
SNIPPET_START MODULE_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START MODULE_HEALTHMONITORINGCALLBACK_CODE
SNIPPET_END
SNIPPET_START MODULE_HEALTHMONITORINGCALLBACK_VARIABLES
SNIPPET_END
SNIPPET_START MODULE_IDLEPARTITION_CODE
		// Sets LEDs pattern
		TEST_LED1_OFF();
		TEST_LED2_OFF();
SNIPPET_END
SNIPPET_START MODULE_IDLEPARTITION_INITIALIZATION
SNIPPET_END
SNIPPET_START MODULE_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DEFAULTPROCESS_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_ERRORHANDLER_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_ERRORHANDLER_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_ERRORHANDLER_TERMINATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_ERRORHANDLER_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_HEALTHMONITORINGCALLBACK_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_HEALTHMONITORINGCALLBACK_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_IDLEPROCESS_CODE
		// Sets LEDs pattern
		TEST_LED1_ON();
		TEST_LED2_OFF();
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_AFTER_SUSPENSION_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_BEFORE_SUSPENSION_CODE
		// Enters critical section
		ENTER_CORE();

		// Shows message
		ConsoleUtilsPrintf("----------------------------------\n");

		// Iterates partitions
		for (PARTITION_IDENTIFIER = 0; PARTITION_IDENTIFIER < MODULE_INFORMATION.PARTITION_COUNT; PARTITION_IDENTIFIER++) {

			// Gets partition information
			PARTITION_INFORMATION = &MODULE_INFORMATION.PARTITION_INFORMATION[PARTITION_IDENTIFIER];

			// Shows message
			ConsoleUtilsPrintf("Partition %u: %s\n", PARTITION_INFORMATION->IDENTIFIER, PARTITION_INFORMATION->PARTITION_ATTRIBUTE->NAME);

			// Iterates processes
			for (PROCESS_IDENTIFIER = 0; PROCESS_IDENTIFIER < PARTITION_INFORMATION->PROCESS_COUNT; PROCESS_IDENTIFIER++) {

				// Gets process information
				PROCESS_INFORMATION = &PARTITION_INFORMATION->PROCESS_INFORMATION[PROCESS_IDENTIFIER];

				// Shows message
				ConsoleUtilsPrintf("	Process %u: %s\n", PROCESS_INFORMATION->IDENTIFIER, PROCESS_INFORMATION->PROCESS_ATTRIBUTE->NAME);
			}
		}

		// Shows message
		ConsoleUtilsPrintf("----------------------------------\n");

		// Exits critical section
		EXIT_CORE();
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS1_PROCESS_VARIABLES
	PARTITION_ID_TYPE PARTITION_IDENTIFIER;
	PARTITION_INFORMATION_TYPE *PARTITION_INFORMATION;
	PROCESS_ID_TYPE PROCESS_IDENTIFIER;
	PROCESS_INFORMATION_TYPE *PROCESS_INFORMATION;
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_AFTER_SUSPENSION_CODE
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_BEFORE_SUSPENSION_CODE
		// Enters critical section
		ENTER_CORE();

		// Gets system time
		SYSTEM_TIME = CLOCK_GETSYSTEMTIME();

		// Calculates milliseconds
		SYSTEM_TIME = SYSTEM_TIME / 1000000;

		// Shows message
		ConsoleUtilsPrintf("Current time: %u     \n", (portUINT32) SYSTEM_TIME);

		// Exits critical section
		EXIT_CORE();
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION1_PARTITION_PROCESS2_PROCESS_VARIABLES
	SYSTEM_TIME_TYPE SYSTEM_TIME;
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DEFAULTPROCESS_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_ERRORHANDLER_CODE
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_ERRORHANDLER_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_ERRORHANDLER_TERMINATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_ERRORHANDLER_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_HEALTHMONITORINGCALLBACK_CODE
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_HEALTHMONITORINGCALLBACK_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_IDLEPROCESS_CODE
		// Sets LEDs pattern
		TEST_LED1_OFF();
		TEST_LED2_ON();
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION2_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DEFAULTPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DEFAULTPROCESS_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_DESCRIPTION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_ERRORHANDLER_CODE
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_ERRORHANDLER_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_ERRORHANDLER_TERMINATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_ERRORHANDLER_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_FUNCTIONS
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_GLOBAL_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_HEALTHMONITORINGCALLBACK_CODE
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_HEALTHMONITORINGCALLBACK_VARIABLES
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_IDLEPROCESS_CODE
		// Sets LEDs pattern
		TEST_LED1_ON();
		TEST_LED2_ON();
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_IDLEPROCESS_INITIALIZATION
SNIPPET_END
SNIPPET_START PARTITION3_PARTITION_INCLUDES
SNIPPET_END
SNIPPET_START PERIODIC_WAIT_ERROR_HANDLING_CODE
			while (true) {
			}
SNIPPET_END
SNIPPET_START SET_MODULE_MODE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START SET_PARTITION_MODE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START STARTUP_MODULE_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START STARTUP_SYSTEM_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
SNIPPET_START START_ERROR_HANDLING_CODE
		while (true) {
		}
SNIPPET_END
MASK_END
